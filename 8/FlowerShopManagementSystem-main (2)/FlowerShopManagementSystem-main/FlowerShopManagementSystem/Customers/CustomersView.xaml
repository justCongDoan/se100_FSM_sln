<Page x:Class="FlowerShopManagementSystem.Customers.CustomersView"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800">

    <Page.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid>
                            <Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
                            <Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>

    <Grid Background="#EFF2F7">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <TextBlock Text="Customers" FontSize="32" FontWeight="SemiBold" Margin="0 20 0 0" Foreground="#121518" HorizontalAlignment="Left"/>

        <Button Style="{StaticResource addButton}" Grid.Row="0" x:Name="btnAddCustomer" Click="btnAddCustomer_Click" Cursor="Hand">
            <StackPanel Orientation="Horizontal">
                <icon:PackIconMaterial Kind="Plus" VerticalAlignment="Center" Margin="0 1 8 0" Width="11" Height="11"/>
                <TextBlock Text="Add new customer"/>
            </StackPanel>
            
        </Button>

        <Separator Height="1" Grid.Row="1" Background="#DAE2EA" Margin="0 -1 0 10"/>

        <TextBlock Text="10 Customers" Grid.Row="2" FontSize="18" FontWeight="SemiBold" Foreground="#121518" HorizontalAlignment="Left" VerticalAlignment="Center"/>

        <TextBlock Text="Filter by" Grid.Row="2" FontSize="13" FontWeight="SemiBold" Margin="0 0 215 0" Foreground="#121518" HorizontalAlignment="Right" VerticalAlignment="Center"/>

        <Grid Width="200" HorizontalAlignment="Right" Grid.Row="2">
            <TextBlock Margin="10 0" VerticalAlignment="Center" Foreground="#B0B9C6" IsHitTestVisible="False"
                           Panel.ZIndex="1" Text="Search in Members ..."
                           Visibility="{Binding ElementName=textBoxFilter, Path=Text.IsEmpty, Converter={StaticResource BoolToVis}}" />

            <TextBox Name="textBoxFilter" Style="{StaticResource filterTextBox}"/>
        </Grid>

        <DataGrid Style="{DynamicResource DataGridStyle1}" CellStyle="{DynamicResource DataGridCellStyle1}" ColumnHeaderStyle="{DynamicResource DataGridColumnHeaderStyle1}" x:Name="customersDataGrid" Grid.Row="3">
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <EventSetter Event="MouseDoubleClick" Handler="DataGridRow_MouseDoubleClick"/>
                    <Setter Property="Margin" Value="0 4 0 0" />
                    <Setter Property="Background" Value="#FFFFFF"/>
                    <Setter Property="SnapsToDevicePixels" Value="true"/>
                    <Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
                    <Setter Property="Cursor" Value="Hand"/>
                    <Setter Property="ValidationErrorTemplate">
                        <Setter.Value>
                            <ControlTemplate>
                                <TextBlock Foreground="Red" Margin="2,0,0,0" Text="!" VerticalAlignment="Center"/>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridRow}">
                                <Border x:Name="DGR_Border" Padding="0 8" CornerRadius="5" Background="{TemplateBinding Background}" BorderThickness="0" SnapsToDevicePixels="True">
                                    <SelectiveScrollingGrid>
                                        <SelectiveScrollingGrid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto"/>
                                            <ColumnDefinition Width="*"/>
                                        </SelectiveScrollingGrid.ColumnDefinitions>
                                        <SelectiveScrollingGrid.RowDefinitions>
                                            <RowDefinition Height="*"/>
                                            <RowDefinition Height="Auto"/>
                                        </SelectiveScrollingGrid.RowDefinitions>
                                        <DataGridCellsPresenter Grid.Column="1" ItemsPanel="{TemplateBinding ItemsPanel}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        <DataGridDetailsPresenter Grid.Column="1" Grid.Row="1" SelectiveScrollingGrid.SelectiveScrollingOrientation="{Binding AreRowDetailsFrozen, Converter={x:Static DataGrid.RowDetailsScrollingConverter}, ConverterParameter={x:Static SelectiveScrollingOrientation.Vertical}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Visibility="{TemplateBinding DetailsVisibility}"/>
                                        <DataGridRowHeader Grid.RowSpan="2" SelectiveScrollingGrid.SelectiveScrollingOrientation="Vertical" Visibility="{Binding HeadersVisibility, Converter={x:Static DataGrid.HeadersVisibilityConverter}, ConverterParameter={x:Static DataGridHeadersVisibility.Row}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
                                    </SelectiveScrollingGrid>
                                </Border>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>

                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#e5e5e5"/>
                            <!--<Setter Property="Foreground" Value="#ffffff"/>-->
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="#e5e5e5"/>
                            <!--<Setter Property="Foreground" Value="#ffffff"/>-->
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsSelected" Value="true"/>
                                <Condition Property="Selector.IsSelectionActive" Value="false"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" Value="#dfdfdf"/>
                        </MultiTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            
            <DataGrid.Columns>
                <DataGridTextColumn Header="#" IsReadOnly="True" CanUserResize="False" Width="auto" Binding="{Binding sttKH}"/>

                <DataGridTemplateColumn Header="Customer Name" IsReadOnly="True" Width="*">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <!--<Border Width="25" Height="25" CornerRadius="50" Margin="0 10 0 0" Background="{Binding BgColor}">
                                    <TextBlock Text="{Binding Character}" VerticalAlignment="Center" HorizontalAlignment="Center" Foreground="White" Margin="0 0 0 1"/>
                                </Border>-->

                                <TextBlock Text="{Binding name}" VerticalAlignment="Center"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Address" IsReadOnly="True" Width="*" Binding="{Binding address}"/>
                <DataGridTextColumn Header="Phone Number" IsReadOnly="True" Width="*" Binding="{Binding phone}"/>
                <DataGridTextColumn Header="Registration Date" IsReadOnly="True" Width="*" Binding="{Binding ngayDK}"/>

                <DataGridTemplateColumn Header="Operations" IsReadOnly="True" Width="auto">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal">
                                <Button x:Name="btnEditCustomer" Style="{StaticResource gridEditButton}" Cursor="Hand" Click="btnEditCustomer_Click">
                                    <icon:PackIconMaterial Kind="PencilOutline" Style="{StaticResource gridButtonIcon}"/>
                                </Button>

                                <!--<Button x:Name="btnDeleteCustomer" Style="{StaticResource gridRemoveButton}" Margin="5 0 0 0" Cursor="Hand" Click="btnDeleteCustomer_Click">
                                    <icon:PackIconMaterial Kind="DeleteOutline" Style="{StaticResource gridButtonIcon}"/>
                                </Button>-->
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

            </DataGrid.Columns>
        </DataGrid>

        <Border Grid.Row="4" HorizontalAlignment="Right" BorderBrush="#dee4ec" BorderThickness="1"
                CornerRadius="5" Padding="5" Background="White" Margin="0 10 10 10">
            <StackPanel Orientation="Horizontal">
                <Button Style="{StaticResource pagingButton}" x:Name="btnFirstPage" Click="btnFirstPage_Click">
                    <icon:PackIconMaterial Kind="ChevronDoubleLeft" Style="{StaticResource pagingButtonIcon}"/>
                </Button>

                <Button Style="{StaticResource pagingButton}" x:Name="btnPreviousPage" Click="btnPreviousPage_Click">
                    <icon:PackIconMaterial Kind="ChevronLeft" Style="{StaticResource pagingButtonIcon}"/>
                </Button>

                <Rectangle Width="1" Fill="#dee4ec" Margin="3 7"/>

                <TextBlock Text="{Binding CurrentPage}" Style="{StaticResource pagingTextBlock}"/>
                <TextBlock Text="of" Style="{StaticResource pagingTextBlock}" Margin="0"/>
                <TextBlock Text="{Binding PageCount}" Style="{StaticResource pagingTextBlock}"/>

                <Rectangle Width="1" Fill="#dee4ec" Margin="3 7"/>

                <Button Style="{StaticResource pagingButton}" x:Name="btnNextPage" Click="btnNextPage_Click">
                    <icon:PackIconMaterial Kind="ChevronRight" Style="{StaticResource pagingButtonIcon}"/>
                </Button>

                <Button Style="{StaticResource pagingButton}" x:Name="btnLastPage" Click="btnLastPage_Click">
                    <icon:PackIconMaterial Kind="ChevronDoubleRight" Style="{StaticResource pagingButtonIcon}"/>
                </Button>

            </StackPanel>
        </Border>

    </Grid>
</Page>
